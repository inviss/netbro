<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:tx="http://www.springframework.org/schema/tx"
 	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
 	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:property-placeholder location="classpath:config/jdbc.properties"/>
	
	<!-- DataSource Configuration -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="minIdle" value="1"/>
		<property name="maxWait" value="3000"/>
		<property name="poolPreparedStatements" value="true"></property>
		<property name="maxOpenPreparedStatements" value="50"></property>
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		factory-bean="entityManagerFactory" factory-method="getSessionFactory">
	</bean>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
        	<list>
        		<value>kr.co.d2net.dto</value>
        	</list>
        </property>
<!--         <property name="persistenceUnitName" value="spring-jpa" /> 
        <property name="mappingResources" value="META-INF/orm.xml"/>-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="generateDdl" value="true" />
				<!--<property name="database" value="SQL_SERVER"/>-->
				<!--<property name="database" value="MYSQL"/>-->
				<property name="database" value="ORACLE"/>
            </bean>
        </property>
        <property name="jpaProperties">
        	<props>
        		<prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <!-- org.hibernate.cache.ehcache.EhCacheRegionFactory -->
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:ehcache.xml</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.jpa.HibernatePersistenceProvider</prop> <!-- org.hibernate.cache.EhCacheProvider -->
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
        	</props>
        </property>
    </bean>	
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>    
    
    <tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>
    <context:component-scan base-package="kr.co.d2net.dao"/>
    
    <!-- SqlMap setup for iBATIS Database Layer
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:kr/co/d2net/dao/sql/sql-map-config.xml"/>
	</bean>
	-->
</beans>