<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
  <!--  
	<mvc:annotation-driven>
		<mvc:async-support default-timeout="3000" task-executor="asyncTaskExecutor">
			<mvc:callable-interceptors>
				<bean class="org.springframework.web.servlet.config.MvcNamespaceTests.TestCallableProcessingInterceptor" />
			</mvc:callable-interceptors>
			<mvc:deferred-result-interceptors>
				<bean class="org.springframework.web.servlet.config.MvcNamespaceTests.TestDeferredResultProcessingInterceptor" />
			</mvc:deferred-result-interceptors>
		</mvc:async-support>
	</mvc:annotation-driven>

	<bean id="asyncTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	    <property name="corePoolSize" value="5" />
	    <property name="maxPoolSize" value="10" />
	    <property name="queueCapacity" value="25" />
	</bean>
-->
	<!-- annotation config & scan -->
	<context:annotation-config />
	<context:component-scan base-package="kr.co.d2net.controller, kr.co.d2net.aop.mvc" />
	<!-- <mvc:annotation-driven /> JSR-303 support will be detected on classpath 
		and enabled automatically DefaultAnnotationHandlerMapping, AnnotationMethodHandlerAdapter를 
		자동 등록한다. -->

	<mvc:annotation-driven conversion-service="conversionService" />
	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="kr.co.d2net.adapter.mvc.TextConverter" />
				<bean class="kr.co.d2net.adapter.mvc.IntegerConverter" />
				<bean class="kr.co.d2net.adapter.mvc.LongConverter" />
				<bean class="kr.co.d2net.adapter.mvc.DateConverter" />
			</list>
		</property>
	</bean>

	<!-- view name tanslator -->
	<bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />
	
	<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
	</bean>
				
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
	</bean>
	
	<bean id="templateLoader" class="de.neuland.jade4j.spring.template.SpringTemplateLoader">
		<property name="basePath" value="/WEB-INF/jade4j/" />
		<property name="encoding" value="UTF-8" />
		<property name="suffix" value=".jade" />
	</bean>
	
	<bean id="jadeConfiguration" class="de.neuland.jade4j.JadeConfiguration">
		<property name="prettyPrint" value="true" />
		<property name="caching" value="false" />
		<property name="templateLoader" ref="templateLoader" />
	</bean>
	
	<!-- tiles2 layout config -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:/config/tiles.cfg.xml</value>
			</list>
		</property>
	</bean>

	<!-- view resolver -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
				<entry key="ssc" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
					<property name="order" value="0" />
				</bean>
				<bean class="kr.co.d2net.viewer.ExtUrlBasedViewResolver">
					<property name="viewClass" value="kr.co.d2net.viewer.ExtTilesView" />
					<property name="exposeSpringMacroModel" value="true" />
					<property name="order" value="1" />
				</bean>

				<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="cache" value="true" />
					<property name="prefix" value="" />
					<property name="suffix" value=".ftl" />
					<property name="exposeSpringMacroHelpers" value="true" />
					<property name="order" value="2" />
				</bean>
<!--		
				<bean class="de.neuland.jade4j.spring.view.JadeViewResolver">
					<property name="configuration" ref="jadeConfiguration" />
					<property name="renderExceptions" value="true" />
					<property name="order" value="3" />
				</bean>
				
				<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
					<property name="templateEngine" ref="templateEngine" />
					<property name="order" value="4" />
				</bean>
-->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
					<property name="order" value="5" />
				</bean>
			</list>
		</property>
		
		<!-- 위의 viewResolvers 에 의해 view를 얻지 못했을 경우에 사용되는 view -->
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="prefixJson" value="true" />
				</bean>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<constructor-arg>
						<bean class="kr.co.d2net.utils.ClasspathScanningJaxb2Marshaller">
							<property name="basePackages">
								<list>
									<value>kr.co.d2net.dto.xml</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
		<property name="defaultContentType" value="application/json" />
	</bean>
	
	<!-- FreeMarker Configurer and View Resolver -->
	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="default_encoding">utf-8</prop>
				<prop key="template_update_delay">0</prop>
				<prop key="number_format">#.#######</prop>
				<prop key="datetime_format">yyyy-MM-dd</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	
	<bean id="freeMarkerTemplateMethod" class="kr.co.d2net.utils.FreeMarkerTemplateMethod" />
	
	<bean name="main" class="org.thymeleaf.spring4.view.ThymeleafView">
		<property name="staticVariables">
			<map>
				<entry key="footer" value="Some company: &lt;b&gt;ACME&lt;/b&gt;" />
			</map>
		</property>
	</bean>


	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
	
	<bean id="fileView" class="kr.co.d2net.controller.viewer.FileDownloadView" />

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="10485760" />
	</bean>

</beans>