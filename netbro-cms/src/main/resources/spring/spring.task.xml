<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="kr.co.d2net.schedule" />

	<bean name="folderWatcherDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.schedule.FolderWatcherJob">
	</bean>
	<bean name="batchDeleteDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.schedule.BatchDeleteJob">
	</bean>
	<bean name="StatisticSearchDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.schedule.StatisticJob">
	</bean>
	<bean name="StorageSearchDetail" class="org.springframework.scheduling.quartz.JobDetailBean"
		p:jobClass="kr.co.d2net.schedule.StorageJob">
	</bean>
	
	<!-- Trigger -->
	<bean id="folderWatcherTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="folderWatcherDetail" p:startDelay="5000"
		p:cronExpression="0/10 * * * * ?" />
	<bean id="batchDeleteTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="batchDeleteDetail" p:startDelay="5000"
		p:cronExpression="01 * * * * ?" />
	<bean id="statisticTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="StatisticSearchDetail" p:startDelay="5000"
		p:cronExpression="0 59 * * * ?" />
	<bean id="storageTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="StorageSearchDetail" p:startDelay="5000"
		p:cronExpression="0 10 * * * ?" />
	<!-- Trigger Add -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		p:waitForJobsToCompleteOnShutdown="true">
		<property name="triggers">
			<list>
				<ref bean="folderWatcherTrigger" />
				<ref bean="batchDeleteTrigger" />
				<ref bean="statisticTrigger" />
				<ref bean="storageTrigger" />
			</list>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>
	<!-- <property name="dataSource" ref="dataSource"/> <property name="transactionManager" 
		ref="transactionManager"/> <property name="overwriteExistingJobs" value="true"/> 
		<property name="jobFactory"> <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/> 
		</property> <property name="quartzProperties"> <props> <prop key="org.quartz.scheduler.instanceName">DasClusteredScheduler</prop> 
		<prop key="org.quartz.scheduler.instanceId">AUTO</prop> <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop> 
		<prop key="org.quartz.threadPool.threadCount">2</prop> <prop key="org.quartz.threadPool.threadPriority">4</prop> 
		<prop key="org.quartz.jobStore.misfireThreshold">60000</prop> <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop> 
		<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop> 
		<prop key="org.quartz.jobStore.useProperties">false</prop> <prop key="org.quartz.jobStore.dataSource">myDS</prop> 
		<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop> <prop key="org.quartz.jobStore.isClustered">true</prop> 
		<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop> </props> 
		</property> -->



	<bean class="kr.co.d2net.schedule.delection.BatchDeleteQueue"
		init-method="start" destroy-method="stop" />
</beans>
